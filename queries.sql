--Customers

--Who are the top 10 customers by total revenue in the last year?
select  c.CustomerID,c.companyname,SUM(od.UnitPrice * od.Quantity) as TotalRevenue 
from Customers c 
LEFT JOIN Orders o on o.CustomerID=c.CustomerID
LEFT join [Order Details] od ON od.orderid=o.OrderID
left join Products p ON p.ProductID=od.productid
GROUP by c.CustomerID,c.CompanyName
ORDER BY TotalRevenue DESC
limit 10;


--How many customers placed more than one order (Returning Customers)?

select count(*) AS ReturningCustomers  
FROM(select customerid
     from Orders
     GROUP by CustomerID
     HAVING COUNT(orderid)>1
) ;

--Which 5 countries generated the highest number of orders?
select  c.Country,count(o.OrderID) NumberofOrders
from Customers c
LEFT JOIN Orders o on o.CustomerID=c.CustomerID
GROUP by country
order by NumberofOrders DESC
limit 5;

--Sales & Orders

--What are the monthly sales totals for 2017 (Trend Analysis)?

SELECT 
    STRFTIME('%Y-%m', OrderDate) AS Month,
    ROUND(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)), 2) AS MonthlySales
FROM Orders o
JOIN "Order Details" od ON o.OrderID = od.OrderID
WHERE STRFTIME('%Y', OrderDate) = '2017'
GROUP BY Month
ORDER BY Month;

--What are the top 5 best-selling products by quantity?

SELECT productname ,SUM(od.Quantity) TotalQuantity
from Products p 
left join [Order Details] od on od.ProductID = p.ProductID
GROUP by productname
order by TotalQuantity DESC
limit 5;
--What is the total sales by Region/Territory?
SELECT e.Region, SUM(od.UnitPrice * od.Quantity) AS TotalSales
FROM [Order Details] od
JOIN Orders o ON od.OrderID = o.OrderID
JOIN Employees e ON o.EmployeeID = e.EmployeeID
GROUP BY e.Region
ORDER BY TotalSales DESC;



--What is the year-over-year sales growth percentage?
WITH SalesByYear AS (
    SELECT CAST(STRFTIME('%Y', o.OrderDate) AS INTEGER) AS Year,
           SUM(od.UnitPrice * od.Quantity) AS TotalSales
    FROM [Order Details] od
    LEFT JOIN Orders o ON od.OrderID = o.OrderID
    GROUP BY Year
)
SELECT 
    curr.Year,
    ROUND(((curr.TotalSales - prev.TotalSales) * 100.0 / prev.TotalSales), 2) AS YoY_Growth_Percentage
FROM SalesByYear curr
JOIN SalesByYear prev 
  ON curr.Year = prev.Year + 1;



--Products

--Which 5 products generated the highest profit margin (Sales Price â€“ Standard Cost)?
WITH ProductProfit AS (
    SELECT p.ProductName,
           SUM(od.UnitPrice * od.Quantity) AS Revenue,
           SUM((od.UnitPrice - (od.UnitPrice * 0.7)) * od.Quantity) AS Profit
    FROM [Order Details] od
    JOIN Products p ON od.ProductID = p.ProductID
    GROUP BY p.ProductName
)
SELECT ProductName,
       Revenue,
       Profit,
       ROUND((Profit * 100.0 / Revenue), 2) AS ProfitMarginPercent
FROM ProductProfit
ORDER BY ProfitMarginPercent DESC
LIMIT 5;


--Which products had zero sales (never ordered)?
SELECT p.ProductID, p.ProductName
FROM Products p
LEFT JOIN "Order Details" od ON p.ProductID = od.ProductID
WHERE od.ProductID IS NULL;

--What is the average product price per category?
SELECT c.CategoryName, AVG(p.UnitPrice) AS AvgPrice
FROM Products p
left JOIN Categories c ON p.CategoryID = c.CategoryID
GROUP BY c.CategoryName
ORDER BY AvgPrice DESC;

--Employees

--What is the total sales revenue generated by each employee?
SELECT e.EmployeeID, e.FirstName || ' ' || e.LastName AS EmployeeName,
       SUM(od.UnitPrice * od.Quantity) AS TotalSales
FROM [Order Details] od
left JOIN Orders o ON od.OrderID = o.OrderID
left JOIN Employees e ON o.EmployeeID = e.EmployeeID
GROUP BY e.EmployeeID, e.FirstName, e.LastName
ORDER BY TotalSales DESC;

--Rank employees by total sales revenue (using Window Functions).
SELECT e.EmployeeID, e.FirstName || ' ' || e.LastName AS EmployeeName,
       SUM(od.UnitPrice * od.Quantity) AS TotalSales,
       RANK() OVER (ORDER BY SUM(od.UnitPrice * od.Quantity) DESC) AS SalesRank
FROM [Order Details] od
JOIN Orders o ON od.OrderID = o.OrderID
JOIN Employees e ON o.EmployeeID = e.EmployeeID
GROUP BY e.EmployeeID, e.FirstName, e.LastName;

--Which employee has the highest Average Order Value?
SELECT e.EmployeeID, e.FirstName || ' ' || e.LastName AS EmployeeName,
       AVG(OrderTotal) AS AvgOrderValue
FROM (
    SELECT o.OrderID, o.EmployeeID,
           SUM(od.UnitPrice * od.Quantity) AS OrderTotal
    FROM Orders o
    JOIN [Order Details] od ON o.OrderID = od.OrderID
    GROUP BY o.OrderID, o.EmployeeID
  limit 1
) t
JOIN Employees e ON t.EmployeeID = e.EmployeeID
GROUP BY e.EmployeeID, e.FirstName, e.LastName
ORDER BY AvgOrderValue DESC;
